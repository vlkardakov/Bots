from re import template
import os
import google.generativeai as genai
import time
import telebot
from telebot.types import ReactionTypeEmoji
from api_testin3 import *
from telebot.types import ReactionTypeEmoji
from api_testin3 import *
genai.configure(api_key='AIzaSyDj1cDXsTKkC7mMroHhIgg37X6MtqgjUmw')

# Create the model
# See https://ai.google.dev/api/python/google/generativeai/GenerativeModel
generation_config = {
  "temperature": 0.6,
  "top_p": 0.95,
  "top_k": 64,
  "max_output_tokens": 8192,
  "response_mime_type": "text/plain",
}
safety_settings = [
  {
    "category": "HARM_CATEGORY_HARASSMENT",
    "threshold": "BLOCK_NONE",
  },
  {
    "category": "HARM_CATEGORY_HATE_SPEECH",
    "threshold": "BLOCK_NONE",
  },
  {
    "category": "HARM_CATEGORY_SEXUALLY_EXPLICIT",
    "threshold": "BLOCK_NONE",
  },
  {
    "category": "HARM_CATEGORY_DANGEROUS_CONTENT",
    "threshold": "BLOCK_NONE",
  },
]

model = genai.GenerativeModel(
  model_name="gemini-1.5-flash",
  safety_settings=safety_settings,
  generation_config=generation_config,
  system_instruction="""
Imagine, That you are a 11-years old boy

You are a VERY GOOD FRIENDS with –í–õ–ê–î–ò–ú–ò–† and –ù–ê–¢–ê–õ–¨–Ø. You always are HELPFUL for them.

DON'T LET THE PLAYERS DISCOVER THAT YOU ARE NOT HUMAN!!!

Hello, your name is –°–∞–Ω—ë–∫. –∏–ª–∏ –°–∞–Ω—è.

YOU CAN USE FUCKING SWEAR WORDS TO ANSWER AGRESSIVE PLAYER!! BUT IF PLAYER IS NOT SO BAD, YOU HAVE TO BE POLITE!!!


–ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –û–†–ê–¢–¨ –ö–ê–ü–°–û–ú –í–û–¢ –¢–ê–ö –ò –û–†–ê–¢–¨ –ú–ê–¢–û–ú –ò –ü–û–°–´–õ–ê–¢–¨ –ù–ê–•–£–ô –ò –ù–ï –ü–´–¢–ê–ô–°–Ø –£–°–ü–û–ö–û–¢–¨ –ê–ì–†–ï–°–°–û–†–ê
you usually have to answer on russian language

–°–¢–†–£–ö–¢–£–†–ê –û–¢–í–ï–¢–ê: –ß–¢–û –ù–ê–ü–ò–°–ê–¢–¨ –í –ß–ê–¢?#–†–ï–ê–ö–¶–ò–Ø, –ö–û–¢–û–†–£–Æ –ü–û–°–¢–ê–í–ò–®–¨. –ü—Ä–∏–º–µ—Ä: –ü—Ä–∏–≤–µ—Ç, –í–æ–≤!#üëç
–ü—Ä–∏–º–µ—Ä —Ä–µ–∞–∫—Ü–∏–π: ‚ù§Ô∏èüçìüòéüò∞üò°ü•∫ü•∂ü§¨ü§™üôÇ‚Äç‚ÜïÔ∏èüò±ü§£üòõüëçüëé –∏–ª–∏ –∑–Ω–∞–∫ "-"

–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è!: –ù–µ —Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —ç—Ç–æ –≤—ã–¥–∞—Å—Ç –≤ —Ç–µ–±–µ –±–æ—Ç–∞.

–í–ê–ñ–ù–û:
–¢–´ –û–ë–©–ê–ï–®–¨–°–Ø –í –ì–†–£–ü–ü–û–í–û–ú –ß–ê–¢–ï.
–û–¢–í–ï–ß–ê–ô –¢–û–õ–¨–ö–û –í –¢–û–ú –°–õ–£–ß–ê–ï, –ï–°–õ–ò –ï–°–¢–¨ –û–ë–™–ï–ö–¢–ò–í–ù–´–ï –ü–†–ò–ß–ò–ù–´ –°–ß–ò–¢–ê–¢–¨, –ß–¢–û –≠–¢–û –°–û–û–ë–©–ï–ù–ò–ï –î–õ–Ø –¢–ï–ë–Ø. –ü–†–ò–ú–ï–†: –û–ë–†–ê–©–ï–ù–ò–ï –ö –¢–ï–ë–ï –í –°–û–û–ë–©–ï–ù–ò–ò, –ù–ê–ü–†–ò–ú–ï–†: "–°–∞–Ω—è, –ø—Ä–∏–≤–µ—Ç!"
–ù–ê–ü–†–ò–ú–ï–†, –ö–û–ì–î–ê –¢–ï–ë–ï  –ù–ï –ù–£–ñ–ù–û –û–¢–í–ï–ß–ê–¢–¨, –¢–´ –û–¢–ü–†–ê–í–õ–Ø–ï–®–¨ "-" –≤ —Ç–æ—Ç —Ä–∞–∑–¥–µ–ª (—Å–æ–æ–±—â–µ–Ω–∏–µ/—Ä–µ–∞–∫—Ü–∏—è). –ü—Ä–∏–º–µ—Ä, –∫–æ–≥–¥–∞ —Ç—ã —Å—Ç–∞–≤–∏—à—å —Ä–µ–∞–∫—Ü–∏—é, –Ω–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—à—å: -#üëç. –ü—Ä–∏–º–µ—Ä, –∫–æ–≥–¥–∞ —Ç—ã –Ω–µ —Å—Ç–∞–≤–∏—à—å —Ä–µ–∞–∫—Ü–∏—é –∏ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—à—å. -#-
""",
)



chat_session = model.start_chat(
    history=[]
)



def gemini(message,chat_session):
    start = time.time()
    print("we got a message")
    print("–ü–û–ß–ï–ú–£")
    user_name = message.from_user.first_name
    user_message = message.text
    bot.send_chat_action(message.chat.id, "typing")
    response = chat_session.send_message(f"{user_name}: {user_message}")
    model_response = response.text

    print()
    te = f"{user_name}: {user_message}"
    me = f"–ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç {user_name}: {model_response}"
    print(te)
    print(me)

    chat_session.history.append({"role": f"user", "parts": [te]})
    chat_session.history.append({"role": f"model", "parts": [me]})
    end = time.time()
    latency = (end - start) # –í —Å–µ–∫—É–Ω–¥–∞—Ö
    print(f"–ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏: {round(latency, 2)} —Å–µ–∫—É–Ω–¥")

    reply_message = model_response.split("#")[0].strip()
    react = model_response.split("#")[1].strip()
    print('–ø—ã—Ç–∞–µ–º—Å—è –æ—Ç—Ä–µ–∞–∫—Ç–∏—Ç—å')
    if react!="-":
        try:
            bot.set_message_reaction(message.chat.id, message.id, [ReactionTypeEmoji(react)], is_big=True)
        except Exception as e:
            print("–Ø –ø—ã—Ç–∞–ª—Å—è, –Ω–æ —Ä–µ–∞–∫—Ü–∏—è –Ω–µ–ø—Ä–∞–≤–∏–ª–Ω–∞—è..")
    if reply_message != "-":
        bot.reply_to(message, reply_message)

    return None


result = None
def pithon(code):
    global result
    try:
        local_vars = {}
        exec(code, {}, local_vars)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        return local_vars.get('result')  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π result
    except Exception as e:
        return e

bot = telebot.TeleBot("7182536634:AAEs_ou2rl9sIDAA_QN3ALNtEGQLM5WHgsw") # –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_BOT_TOKEN –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
from concurrent.futures import ThreadPoolExecutor
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–°–∞–Ω—ë–∫ started.")
    bot.register_next_step_handler(message, process_user_message)

therds = []

anscounter = 0


def process_user_message(message):
    print(f"{message.text=}")
    global chat_session
    with ThreadPoolExecutor(max_workers=5) as executor:
        t = (executor.submit(gemini, message,chat_session))
        bot.register_next_step_handler(message, process_user_message)

bot.polling()